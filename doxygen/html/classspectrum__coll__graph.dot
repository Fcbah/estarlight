digraph "spectrum"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{spectrum\n||+ spectrum()\l+ generateKsingle()\l+ generateKdouble()\l+ drawKsingle()\l+ drawKdouble()\l+ setBeamBeamSystem()\l+ setMinGammaEnergy()\l+ setMaxGammaEnergy()\l+ setBmin()\l+ setBmax()\l# generateBreakupProbabilities()\l# getSigma()\l# getTransformedNofe()\l- getFnSingle()\l- getFnDouble()\l- spectrum()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_eGammaMax\n#_bMin\n-_eGammaMin\n#_bMax" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{double\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_randy" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{randomGenerator\n||+ SetSeed()\l+ Rndom()\l}",height=0.2,width=0.4,color="black",URL="$classrandomGenerator.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -_Mt\n-_count624" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{int\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_fnDoubleCumulative\n-_fnDouble" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{std::vector\< std::vector\l\< double \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{std::vector\< double \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node7 [dir="back",color="orange",fontsize="10",style="solid",label=" \< double \>" ,fontname="Helvetica"];
  Node8 [label="{std::vector\< T \>\n||}",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{T\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node6 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::vector\< double \> \>" ,fontname="Helvetica"];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_aTarget\n#_nBbins\n-_zTarget\n-_nK" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_hadBreakProbCalculated" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{bool\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #_beamBeamSystem" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{beamBeamSystem\n||+ beamBeamSystem()\l+ beamBeamSystem()\l+ ~beamBeamSystem()\l+ beam1()\l+ beam2()\l+ probabilityOfBreakup()\l+ cmsBoost()\l+ beamLorentzGamma()\l+ init()\l- generateBreakupProbabilities()\l- probabilityOfHadronBreakup()\l- probabilityOfPhotonBreakup()\l}",height=0.2,width=0.4,color="black",URL="$classbeamBeamSystem.html",tooltip=" "];
  Node3 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -_breakupImpactParameter\lStep\n-_pPhotonBreakup\n-_beamLorentzGamma1\n-_beamLorentzGamma2\n-_breakupCutOff\n-_cmsBoost\n-_beamLorentzGamma\n-_pHadronBreakup" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -_beamBreakupMode" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{const int\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -_beam1\n-_beam2" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{beam\n||+ beam()\l+ ~beam()\l+ photonDensity()\l+ rapidity()\l+ setBeamLorentzGamma()\l}",height=0.2,width=0.4,color="black",URL="$classbeam.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{nucleus\n||+ nucleus()\l+ nucleus()\l+ ~nucleus()\l+ init()\l+ Z()\l+ A()\l+ productionMode()\l+ formFactor()\l+ dipoleFormFactor()\l+ thickness()\l+ nuclearRadius()\l+ rho0()\l- woodSaxonSkinDepth()\l- rws()\l}",height=0.2,width=0.4,color="black",URL="$classnucleus.html",tooltip=" "];
  Node3 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -_Radius\n-_r0\n-_rho0" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -_Z\n-_productionMode\n-_A" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 -> Node13 [color="grey25",fontsize="10",style="solid",label=" #_beamLorentzGamma" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -_breakupProbabilities" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_eGamma\n#_probOfBreakup\n-_fnDoubleInt\n-_fnDoubleIntCumulative\n-_fnSingleCumulative\n-_fnSingle" ,arrowhead="odiamond",fontname="Helvetica"];
}

digraph "inputParser"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{inputParser\n||+ inputParser()\l+ ~inputParser()\l+ parseFile()\l+ parseString()\l+ addIntParameter()\l+ addUintParameter()\l+ addFloatParameter()\l+ addDoubleParameter()\l+ addBoolParameter()\l+ addStringParameter()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -_intParameters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{std::map\< std::string,\l inputParser::_parameter\l\< int \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{inputParser::_parameter\l\< int \>\n||+ _parameter()\l+ operator==()\l+ operator\<()\l+ printParameterInfo()\l}",height=0.2,width=0.4,color="black",URL="$classinputParser_1_1__parameter.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +_val" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{int\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +_required\n+_found" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{bool\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +_name" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{std::basic_string\<\l char \>\n||}",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node3 [dir="back",color="orange",fontsize="10",style="solid",label=" \< int \>" ,fontname="Helvetica"];
  Node8 [label="{inputParser::_parameter\< T \>\n||+ _parameter()\l+ operator==()\l+ operator\<()\l+ printParameterInfo()\l}",height=0.2,width=0.4,color="black",URL="$classinputParser_1_1__parameter.html",tooltip=" "];
  Node5 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +_required\n+_found" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +_name" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +_val" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{T\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string, inputParser\l::_parameter\< int \> \>" ,fontname="Helvetica"];
  Node10 [label="{std::map\< K, T \>\n||}",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{K\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -_stringParameters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{std::map\< std::string,\l inputParser::_parameter\l\< std::string \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{inputParser::_parameter\l\< std::string \>\n||+ _parameter()\l+ operator==()\l+ operator\<()\l+ printParameterInfo()\l}",height=0.2,width=0.4,color="black",URL="$classinputParser_1_1__parameter.html",tooltip=" "];
  Node5 -> Node13 [color="grey25",fontsize="10",style="solid",label=" +_required\n+_found" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node13 [color="grey25",fontsize="10",style="solid",label=" +_val\n+_name" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node13 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string \>" ,fontname="Helvetica"];
  Node6 -> Node12 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node12 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string, inputParser\l::_parameter\< std::string \> \>" ,fontname="Helvetica"];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -_boolParameters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{std::map\< std::string,\l inputParser::_parameter\l\< bool \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{inputParser::_parameter\l\< bool \>\n||+ _parameter()\l+ operator==()\l+ operator\<()\l+ printParameterInfo()\l}",height=0.2,width=0.4,color="black",URL="$classinputParser_1_1__parameter.html",tooltip=" "];
  Node5 -> Node15 [color="grey25",fontsize="10",style="solid",label=" +_val\n+_required\n+_found" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node15 [color="grey25",fontsize="10",style="solid",label=" +_name" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node15 [dir="back",color="orange",fontsize="10",style="solid",label=" \< bool \>" ,fontname="Helvetica"];
  Node6 -> Node14 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node14 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string, inputParser\l::_parameter\< bool \> \>" ,fontname="Helvetica"];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -_doubleParameters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{std::map\< std::string,\l inputParser::_parameter\l\< double \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node16 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{inputParser::_parameter\l\< double \>\n||+ _parameter()\l+ operator==()\l+ operator\<()\l+ printParameterInfo()\l}",height=0.2,width=0.4,color="black",URL="$classinputParser_1_1__parameter.html",tooltip=" "];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" +_val" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{double\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node17 [color="grey25",fontsize="10",style="solid",label=" +_required\n+_found" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node17 [color="grey25",fontsize="10",style="solid",label=" +_name" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node17 [dir="back",color="orange",fontsize="10",style="solid",label=" \< double \>" ,fontname="Helvetica"];
  Node10 -> Node16 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string, inputParser\l::_parameter\< double \> \>" ,fontname="Helvetica"];
  Node19 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -_uintParameters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{std::map\< std::string,\l inputParser::_parameter\l\< unsigned int \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{inputParser::_parameter\l\< unsigned int \>\n||+ _parameter()\l+ operator==()\l+ operator\<()\l+ printParameterInfo()\l}",height=0.2,width=0.4,color="black",URL="$classinputParser_1_1__parameter.html",tooltip=" "];
  Node4 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +_val" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +_required\n+_found" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +_name" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node20 [dir="back",color="orange",fontsize="10",style="solid",label=" \< unsigned int \>" ,fontname="Helvetica"];
  Node10 -> Node19 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string, inputParser\l::_parameter\< unsigned int \> \>" ,fontname="Helvetica"];
  Node21 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -_floatParameters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{std::map\< std::string,\l inputParser::_parameter\l\< float \> \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node22 -> Node21 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{inputParser::_parameter\l\< float \>\n||+ _parameter()\l+ operator==()\l+ operator\<()\l+ printParameterInfo()\l}",height=0.2,width=0.4,color="black",URL="$classinputParser_1_1__parameter.html",tooltip=" "];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" +_val" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{float *\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node22 [color="grey25",fontsize="10",style="solid",label=" +_required\n+_found" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node22 [color="grey25",fontsize="10",style="solid",label=" +_name" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node22 [dir="back",color="orange",fontsize="10",style="solid",label=" \< float \>" ,fontname="Helvetica"];
  Node6 -> Node21 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node21 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string, inputParser\l::_parameter\< float \> \>" ,fontname="Helvetica"];
}
